@charset "UTF-8";

/*
 * 元素居中mixin
 */

@mixin center($width:null, $height:null) {
    position: absolute;
    top: 50%;
    left: 50%;
    @if not $width and not $height {
        -webkit-transform: translate(-50%, -50%);
        -moz-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        -o-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    }
    @else if $width and $height {
        width: $width;
        height: $height;
        margin: -($width/2) #{0 0} -($height/2);
    }
    @else if $width and not $height {
        width: $width;
        margin-left: -($width/2);
        -webkit-transform: translateY(-50%);
        -moz-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        -o-transform: translateY(-50%);
        transform: translateY(-50%);
    }
    @else if not $width and $height {
        height: $height;
        margin-top: -($height/2);
        -webkit-transform: translateX(-50%);
        -moz-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        -o-transform: translateX(-50%);
        transform: translateX(-50%);
    }
}

/*
 * ===========  思路 ==============
 *
 * 当我们需要元素居中的时候会有涉及到两种情况，分别为知道子元素高宽以及不知道
 * 所以Mixin内传入两个参数，width与height
 * ①当知道width与height时，我们可以用最常规的方法margin负值处理居中问题
 * ②当只知道height并不知道width的情况下，我们可以使用margin-top负值，transform:translateX(-50%)，进行处理
 * ③当只知道width并不知道height的情况下，我们可以使用margin-left负值，transform:translateY(-50%)，进行处理
 * ④当都不知道width与height时，我们可以用transform:translate(-50%,-50%)，进行处理
 *
 * =================================
 * =================================
 *
 * =========== 使用 ================
 *
 * .father{
 *      position: relative;  
 * }
 * .child-know{
 *      @mixin center;  
 * }
 * 输出=>
 * .child-know{
 *      position: absolute;
 *      top: 50%;
 *      left: 50%;
 *      -webkit-transform: translate(-50%,-50%);
 *      -moz-transform: translate(-50%,-50%);
 *      -ms-transform: translate(-50%,-50%);
 *      -o-transform: translate(-50%,-50%);
 *      transform: translate(-50%,-50%);
 * }
 *
 * .child-know-width{
 *      @mixin center($width:400px);  
 * }
 * 输出=>
 * .child-know-width{
 *      position: absolute;
 *      top: 50%;
 *      left: 50%;
 *      width: 400px;
 *      margin-left: -200px;
 *      -webkit-transform: translateY(-50%);
 *      -moz-transform: translateY(-50%);
 *      -ms-transform: translateY(-50%);
 *      -o-transform: translateY(-50%);
 *      transform: translateY(-50%);
 * }
 *
 * .child-know-height{
 *      @mixin center($height:400px);  
 * }
 * 输出=>
 * .child-know-width{
 *      position: absolute;
 *      top: 50%;
 *      left: 50%;
 *      height: 400px;
 *      margin-top: -200px;
 *      -webkit-transform: translateX(-50%);
 *      -moz-transform: translateX(-50%);
 *      -ms-transform: translateX(-50%);
 *      -o-transform: translateX(-50%);
 *      transform: translateX(-50%);
 * }
 *
 * .child-know{
 *      @mixin center(400px,400px);  
 * }
 * 输出=>
 * .child-know-width{
 *      position: absolute;
 *      top: 50%;
 *      left: 50%;
 *      height: 400px;
 *      width: 400px;
 *      margin: -200px 0 0 -200px;
 * }